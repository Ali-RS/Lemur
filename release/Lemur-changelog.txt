
Lemur TBD
---------
* Updated Panel javadoc to clarify y-inversion in layouts.
* Added a ConsumingMouseListener implementation that can be
    used to make GUI elements "opaque" to mouse events.
* Added TextField.setFont().
* TextComponent and TextEntryComponent will no longer recreate
    the BitmapText in setFont() unless the font has actually
    changed.
* QuadBackgroundComponent modified to support Textures.
* Added a HoverMouseListener to better facility fly-over style
    tool tips.
* Added the ElementId to the toString() of the core GUI elements.
* MouseAppState modified to do picking on the collision roots in
    reverse order so that they better act like layers.
* Added convenience methods to ElementId to grab a child element
    ID using the dot-notation preferred by the style system.
* Added standard get() method to Attributes that looks up the
    value without doing a default value check (which requires knowing
    the type).
* Add the ability to retrieve the command lists from a button.
* Added a double-gradient.png standard icon for creating 'glass-like'
    vertical bevels.
* Added a protected getDragStartLocation() to the default DragHandler 
    implementation so that subclasses can retrieve it if needed.  Useful
    for implementations that will indicate "rubber-banding" or similar. 
* Added a PickEventSession to handle delivery of cursor-based events
    to pickable components.  Useful for non-mouse based event handling
    (ie: joysticks, touch, etc.) or when event locations need to be
    rempapped during event processing.
* Changed MouseAppState to use a PickEventSession for its picking and
    event delivery.
* Added Cursor-related events, listeners, and a CursorEventControl that
    works similarly to MouseEventControl but provides information about
    the collision.
* Converted Slider and DragHandler to use the new cursor events so that
    they could better calculate projection.
* Optimized QuadBackgroundComponent to avoid resizing the quad if its
    size hasn't changed.
* Added getChildren() and clearChildren() to GuiLayout and its 
    implementations.        
* Fixed SpringGridLayout.remove() to recalculate the row and column
    counts.   
* Exposed button states isPressed() and isHighlightOn().
* Added a method to SpringGridLayout to get the node at a specific
    row and column.
* Modified SpringGridLayout to allow null children.  This can be useful
    for padding out the edges for FillMode.FORCED_EVEN
* Fixed SpringGridLayout to report the proper preferred size when
    FillMode.FORCED_EVEN is used for an axis.
* Updated the javadoc for MouseAppState and PickEventSession
* Added a TouchAppState for handling touch events similar to
    how mouse events are handled but supporting multi-touch.
* GuiGlobals updated to automatically include touch support if
    detected.  (Currently if touch is detected then the mouse
    support is disabled.)
* Updated DragHandler to be a CursorEventListener instead of a 
    MouseEventListener.  This means it can avoid using the deprecated
    back door methods to getting ViewPort info since it is now part
    of the cursor event itself.
* Fixed SpringGridLayout to do better clean-up if replacing an
    existing node at a specific row, column.
* Added collection based addCommands() to CommandMap
* Added a (style IDed) setter to Button for setting the whole
    command map.
* Added some ElementId-based Attributes 'getters' to the Styles API. 
